<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="template_xlsx" type="System.Byte[], mscorlib">
    <value>
        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
</value>
  </data>
</root>